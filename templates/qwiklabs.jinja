#
#  Copyright 2019 Google Inc.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#

outputs:
- name: Domain
  value: $(ref.citrix-on-gcp.domain-name)
- name: Domain Admin User
  value: $(ref.citrix-on-gcp.domain-admin)
- name: Domain Admin Password
  value: $(ref.citrix-on-gcp.domain-admin-password)
- name: Domain Test User
  value: $(ref.citrix-on-gcp.domain-user)
- name: Domain Test Password
  value: $(ref.citrix-on-gcp.domain-user-password)
- name: Citrix Cloud Workspace URL
  value: "$(ref.output-citrix-cloud.workspace-url)"
- name: Citrix Cloud / Gmail User
  value: "$(ref.output-citrix-cloud.org-email)"
- name: Citrix Cloud / Gmail Password
  value: "$(ref.output-citrix-cloud.org-password)"

resources:
- name: citrix-on-gcp
  type: citrix-on-gcp.jinja
  properties:
    setup-citrix: False
    omit-suffix: True
    domain: example.com
    netbios-name: EXAMPLE
- name: citrix-cloud
  action: gcp-types/cloudbuild-v1:cloudbuild.projects.builds.create
  properties:
    steps:
    - name: google/cloud-sdk
      args:
      - bash
      - -c
      - gcloud iam service-accounts keys create sa-key.json --iam-account $(ref.citrix-integration-sa.email) --key-file-type json
    - name: google/cloud-sdk
      args:
      - gsutil
      - cp
      - gs://majestic-voice-274801-public/print-identity-token.py
      - .
    - name: google/cloud-sdk
      args:
      - gcloud
      - auth
      - list
    - name: gcr.io/majestic-voice-274801/python3-google-auth
      entrypoint: bash
      args:
      - -c
      - python3 print-identity-token.py -u https://majestic-voice-274801.uc.r.appspot.com > token
    - name: gcr.io/cloud-builders/curl
      entrypoint: bash
      args:
      - -c
      - 'curl -o citrix-cloud.json -X POST -H "authorization: Bearer $(cat token)" -H "content-type: application/json" --data-binary ''{"lab-id":"50110","duration":90,"ql-email":"{{ properties["userName"] }}@qwiklabs.net","ql-password":"{{ properties["userPassword"] }}","ql-project":"{{ env["project"] }}"}'' https://majestic-voice-274801.uc.r.appspot.com/citrix-cloud/v1/tenant-sessions/'
    - name: gcr.io/majestic-voice-274801/hexdump
      args:
      - -C
      - citrix-cloud.json
    - name: google/cloud-sdk
      args:
      - gsutil
      - cp
      - citrix-cloud.json
      - gs://$(ref.bucket.name)/output/
  metadata:
    runtimePolicy:
    - CREATE
    dependsOn:
    - api-cloudbuild
    - elevate-cb-permissions
    - qwiklabs-add-iam-policy
    - citrix-integration-sa-policy
- name: citrix-integration-sa
  type: gcp-types/iam-v1:projects.serviceAccounts
  properties:
    accountId: citrix-integration
  accessControl:
  metadata:
    dependsOn:
    - elevate-cb-permissions
    - api-cloudresourcemanager
- name: citrix-integration-sa-policy
  action: gcp-types/iam-v1:iam.projects.serviceAccounts.setIamPolicy
  properties:
    resource: projects/{{ env['project'] }}/serviceAccounts/$(ref.citrix-integration-sa.email)
    policy:
      bindings:
      - role: roles/iam.serviceAccountUser
        members:
        - serviceAccount:$(ref.citrix-integration-sa.email)
      - role: roles/iam.serviceAccountTokenCreator
        members:
        - serviceAccount:$(ref.citrix-integration-sa.email)
  metadata:
    runtimePolicy:
    - CREATE
- name: output-citrix-cloud
  action: gcp-types/storage-v1:storage.objects.get
  properties:
    bucket: $(ref.bucket.name)
    object: output/citrix-cloud.json
    alt: media
  metadata:
    dependsOn:
    - citrix-cloud
    runtimePolicy:
    - CREATE
- name: elevate-cb-permissions
  action: gcp-types/cloudbuild-v1:cloudbuild.projects.builds.create
  properties:
    steps:
    - name: registry.hub.docker.com/gcptraining/ql-cloudbuild-gcloud:2.0
      args:
      - {{ env['project'] }}
      - {{ properties['region'] }}
      - {{ properties['zone'] }}
      - '{{ properties['keyFile'] }}'
      - projects
      - add-iam-policy-binding
      - {{ env['project'] }} 
      - --member 
      - serviceAccount:{{ env['project_number'] }}@cloudbuild.gserviceaccount.com
      - --role
      - roles/owner
    - name: registry.hub.docker.com/gcptraining/ql-cloudbuild-gcloud:2.0
      args:
      - {{ env['project'] }}
      - {{ properties['region'] }}
      - {{ properties['zone'] }}
      - '{{ properties['keyFile'] }}'
      - projects
      - add-iam-policy-binding
      - {{ env['project'] }} 
      - --member 
      - serviceAccount:{{ env['project_number'] }}@cloudservices.gserviceaccount.com
      - --role
      - roles/owner
  metadata:
    runtimePolicy:
    - CREATE 
    dependsOn:
    - api-cloudbuild
- name: qwiklabs-get-iam-policy
  action: gcp-types/cloudresourcemanager-v1:cloudresourcemanager.projects.getIamPolicy
  properties:
    resource: {{ env['project'] }}
  metadata:
    dependsOn:
    - api-cloudresourcemanager
    - elevate-cb-permissions
- name: qwiklabs-add-iam-policy
  action: gcp-types/cloudresourcemanager-v1:cloudresourcemanager.projects.setIamPolicy
  properties:
    resource: {{ env['project'] }}
    policy: $(ref.qwiklabs-get-iam-policy)
    gcpIamPolicyPatch:
      add:
      - role: roles/owner
        members:
        - "serviceAccount:$(ref.citrix-integration-sa.email)"

