#
#  Copyright 2018 Google Inc.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#

{% if properties['omit-suffix'] %}
{% set suffix = '' %}
{% else %}
{% if properties['suffix'] == '%deploy%' %}
{% set suffix = '-' + env['deployment'] %}
{% else %}
{% set suffix = '-' + properties['suffix'] %}
{% endif %}
# trim to max length of 9 to keep copmuter names short enough for netbios
{% set suffix = suffix[0:9] %}
{% endif %}

{% set resource_location = "GCP" + suffix + " (" + env['project'] + ")" %}
{% set machine_catalog = "catalog-" + env['project'] + suffix %}
{% set delivery_group = "group-" + env['project'] + suffix %}
{% set hosting_connection = "host-" + env['project'] + suffix %}

resources:
- name: apis
  type: apis.jinja
  properties:
    enabled:
    - cloudbuild
    - cloudkms
    - cloudresourcemanager
    - compute
    - dns
    - iam
    - runtimeconfig
- name: config
  type: gcp-types/runtimeconfig-v1beta1:projects.configs
  properties:
    config: citrix{{ suffix }}
  metadata:
    dependsOn:
    - api-runtimeconfig
- name: bucket
  type: gcp-types/storage-v1:buckets
  properties:
    name: citrix-on-gcp-{{ env['project_number'] }}{{ suffix }}
    location: {{ properties['region'] }}
- name: bucket-cleanup
  action: gcp-types/cloudbuild-v1:cloudbuild.projects.builds.create
  metadata:
    runtimePolicy:
    - DELETE
  properties:
    steps:
    - name: gcr.io/cloud-builders/gsutil
      args: ['rm', '-r', 'gs://$(ref.bucket.name)/' ]
    timeout: 120s
- name: keyRing
  action: gcp-types/cloudkms-v1:projects.locations.keyRings
  properties:
    parent: projects/{{ env["project"] }}/locations/global
    keyRingId: citrix{{ suffix }}
  metadata:
    dependsOn:
    - api-cloudkms
    runtimePolicy:
    - CREATE
- name: cryptoKey
  action: gcp-types/cloudkms-v1:projects.locations.keyRings.cryptoKeys
  properties:
    parent: $(ref.keyRing.name)
    cryptoKeyId: domain-secrets
    purpose: ENCRYPT_DECRYPT
  metadata:
    runtimePolicy:
    - CREATE
- name: cryptoKeyPolicy
  action: gcp-types/cloudkms-v1:cloudkms.projects.locations.keyRings.cryptoKeys.setIamPolicy
  properties:
    resource: $(ref.cryptoKey.name)
    policy:
      bindings:
      - role: roles/cloudkms.cryptoKeyDecrypter
        members:
        - "user:{{ env['username'] }}"
        - "serviceAccount:$(ref.admin-service-account.email)"
      - role: roles/cloudkms.cryptoKeyEncrypter
        members:
        - "user:{{ env['username'] }}"
        - "serviceAccount:$(ref.admin-service-account.email)"
  metadata:
    runtimePolicy:
    - CREATE
- name: admin-service-account
  type: gcp-types/iam-v1:projects.serviceAccounts
  properties:
    accountId: bootstrap{{ suffix }}
    displayName: 'Admin service account for bootstrapping domain-joined servers with elevated permissions'
  metadata:
    dependsOn:
    - api-iam
- name: citrix-service-account
  type: gcp-types/iam-v1:projects.serviceAccounts
  properties:
    accountId: citrix{{ suffix }}
    displayName: 'Service account for Citrix machine catalog for GCP'
  accessControl:
    gcpIamPolicy:
      bindings:
      - role: roles/iam.serviceAccountKeyAdmin
        members:
        - "serviceAccount:$(ref.admin-service-account.email)"
  metadata:
    dependsOn:
    - api-iam
- name: get-iam-policy
  action: gcp-types/cloudresourcemanager-v1:cloudresourcemanager.projects.getIamPolicy
  properties:
    resource: {{ env['project'] }}
  metadata:
    dependsOn:
    - api-cloudresourcemanager
- name: add-iam-policy
  action: gcp-types/cloudresourcemanager-v1:cloudresourcemanager.projects.setIamPolicy
  properties:
    resource: {{ env['project'] }}
    policy: $(ref.get-iam-policy)
    gcpIamPolicyPatch:
      add:
      - role: roles/editor
        members:
        - "serviceAccount:$(ref.admin-service-account.email)"
      - role: roles/storage.admin
        members:
        - "serviceAccount:{{ env['project_number'] }}@cloudbuild.gserviceaccount.com"
        - "serviceAccount:$(ref.citrix-service-account.email)"
      - role: roles/compute.instanceAdmin.v1
        members:
        - "serviceAccount:{{ env['project_number'] }}@cloudbuild.gserviceaccount.com"
      - role: roles/iam.serviceAccountUser
        members:
        - "serviceAccount:{{ env['project_number'] }}@cloudbuild.gserviceaccount.com"
        - "serviceAccount:$(ref.citrix-service-account.email)"
      - role: roles/datastore.user
        members:
        - "serviceAccount:$(ref.citrix-service-account.email)"
      - role: roles/cloudbuild.builds.editor
        members:
        - "serviceAccount:$(ref.citrix-service-account.email)"
      - role: roles/compute.admin
        members:
        - "serviceAccount:$(ref.citrix-service-account.email)"
  metadata:
    dependsOn:
    - api-cloudbuild
    - api-cloudresourcemanager
- name: network
  type: network.jinja
  properties:
    suffix: "{{ suffix }}"
    region: {{ properties['region'] }}
    zone: {{ properties['zone'] }}
    secondary-zone: {{ properties['secondary-zone'] }}
    subnets: {{ properties['subnets'] }}
    domain-name: {{ properties['domain-name'] }}
    dc-addresses:
    - {{ properties['domain-controllers'][0]['address'] }}
{% if not properties['minimal'] %}
    - {{ properties['domain-controllers'][1]['address'] }}
{% endif %}
- name: domain-controllers
  type: domain-controllers.jinja
  properties:
    suffix: "{{ suffix }}"
    region: {{ properties['region'] }}
    primary-zone: {{ properties['zone'] }}
    secondary-zone: {{ properties['secondary-zone'] }}
    subnetwork: $(ref.citrix-{{ properties['region'] }}{{ suffix }}.selfLink)
    service-account: $(ref.admin-service-account.email)
    domain-name: {{ properties['domain-name'] }}
    netbios-name: {{ properties['netbios-name'] }}
    kms-key: $(ref.cryptoKey.name)
    gcs-prefix: gs://$(ref.bucket.name)/
    runtime-config: $(ref.config.name)
    minimal: {{ properties['minimal'] }}
    ssd: {{ properties['ssd'] }}
    bootstrap-from: {{ properties['bootstrap-from'] }}
    domain-controllers: {{ properties['domain-controllers'] }}
- name: bastion
  type: bastion.jinja
  properties:
    suffix: "{{ suffix }}"
    resource-location: {{ resource_location }}
    machine-catalog: {{ machine_catalog }}
    delivery-group: {{ delivery_group }}
    hosting-connection: {{ hosting_connection }}
    zone: {{ properties['zone'] }}
    subnetwork: $(ref.citrix-{{ properties['region'] }}{{ suffix }}.selfLink)
    service-account: $(ref.admin-service-account.email)
{% if properties['power-managed'] %}
    hosting-connection-service-account: $(ref.citrix-service-account.email)
{% endif %}
    domain-name: {{ properties['domain-name'] }}
    netbios-name: {{ properties['netbios-name'] }}
    kms-key: $(ref.cryptoKey.name)
    gcs-prefix: gs://$(ref.bucket.name)/
    runtime-config: $(ref.config.name)
    minimal: {{ properties['minimal'] }}
    ssd: {{ properties['ssd'] }}
    bootstrap-from: {{ properties['bootstrap-from'] }}
    citrix-creds: {{ properties['citrix-creds'] }}
- name: cc
  type: cloud-connector.jinja
  properties:
    suffix: "{{ suffix }}"
    zones:
    - {{ properties['zone'] }}
{% if not properties['minimal'] %}
    - {{ properties['secondary-zone'] }}
{% endif %}
    subnetwork: $(ref.citrix-{{ properties['region'] }}{{ suffix }}.selfLink)
    service-account: $(ref.admin-service-account.email)
    domain-name: {{ properties['domain-name'] }}
    netbios-name: {{ properties['netbios-name'] }}
    kms-key: $(ref.cryptoKey.name)
    gcs-prefix: gs://$(ref.bucket.name)/
    runtime-config: $(ref.config.name)
    minimal: {{ properties['minimal'] }}
    ssd: {{ properties['ssd'] }}
    bootstrap-from: {{ properties['bootstrap-from'] }}
    citrix-creds: {{ properties['citrix-creds'] }}
- name: vda
  type: vda.jinja
  properties:
    suffix: "{{ suffix }}"
    zones:
    {% for i in range(properties['workers']) %}
    - {{ loop.cycle(properties['zone'], properties['secondary-zone']) }}
    {% endfor %}
    subnetwork: $(ref.citrix-{{ properties['region'] }}{{ suffix }}.selfLink)
    service-account: $(ref.admin-service-account.email)
    domain-name: {{ properties['domain-name'] }}
    netbios-name: {{ properties['netbios-name'] }}
    kms-key: $(ref.cryptoKey.name)
    gcs-prefix: gs://$(ref.bucket.name)/
    runtime-config: $(ref.config.name)
    vda-download-url: {{ properties['vda-download-url'] }}
    machine-catalog: {{ machine_catalog }}
    delivery-group: {{ delivery_group }}
{% if properties['power-managed'] %}
    hypervisor-connection: {{ hosting_connection }}
{% endif %}
    cloud-connectors:
    - cc1{{ suffix }}.{{ properties['domain-name'] }}
{% if not properties['minimal'] %}
    - cc2{{ suffix }}.{{ properties['domain-name'] }}
{% endif %}
    minimal: {{ properties['minimal'] }}
    ssd: {{ properties['ssd'] }}
    bootstrap-from: {{ properties['bootstrap-from'] }}
    citrix-creds: {{ properties['citrix-creds'] }}

